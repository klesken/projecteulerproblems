package projecteulerproblems;
/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
/**
 *
 * @author vikka994
 */
public class Problem2 implements ProjectEulerProblem{
    private int solution;
    private final int pNr = 2; //Number of problem
    @Override
    public int problem() {
        return pNr;
    }

    @Override
    public void solution() {
        System.out.println("Solution is: " + solution);
    }

    @Override
    public void solve() {
        UtilityClass.startTimer();
        
        final int numberOfFibsToCheck = 100000;
        int[] fibs = UtilityClass.fibonacci(numberOfFibsToCheck);
        int sum = 0;
        for(int i = 0; (fibs[i] < 4000000) && i < numberOfFibsToCheck; i++){
            if(fibs[i] % 2 == 0) sum += fibs[i]; 
        }
        
        solution = sum;
        
        UtilityClass.endTimer(this);
    }
    
}
